{"ast":null,"code":"var _jsxFileName = \"L:\\\\Work\\\\Projects\\\\guest-book-client-main\\\\guest-book-client-main\\\\src\\\\context\\\\auth\\\\MessagesProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useReducer, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessagesContext = /*#__PURE__*/createContext();\nconst initialState = {\n  messages: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_MESSAGES':\n      return {\n        messages: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst MessagesProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(MessagesContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = MessagesProvider;\nexport const useMessagesContext = () => {\n  _s2();\n\n  return useContext(MessagesContext);\n};\n\n_s2(useMessagesContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default MessagesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesProvider\");","map":{"version":3,"sources":["L:/Work/Projects/guest-book-client-main/guest-book-client-main/src/context/auth/MessagesProvider.js"],"names":["createContext","useReducer","useContext","MessagesContext","initialState","messages","reducer","state","action","type","payload","MessagesProvider","children","dispatch","useMessagesContext"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,QAAsD,OAAtD;;AAEA,MAAMC,eAAe,gBAAGH,aAAa,EAArC;AAEA,MAAMI,YAAY,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAArB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO;AAAEJ,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAAnB,OAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMI,gBAAgB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACzC,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBZ,UAAU,CAACK,OAAD,EAAUF,YAAV,CAApC;AAEA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAAjC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;;GAAMD,gB;;KAAAA,gB;AAUN,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AAAA;;AACtC,SAAOZ,UAAU,CAACC,eAAD,CAAjB;AACD,CAFM;;IAAMW,kB;;AAIb,eAAeH,gBAAf","sourcesContent":["import { createContext, useReducer, useContext } from 'react';\n\nconst MessagesContext = createContext();\n\nconst initialState = { messages: [] };\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_MESSAGES':\n      return { messages: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst MessagesProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <MessagesContext.Provider value={{ state, dispatch }}>\n      {children}\n    </MessagesContext.Provider>\n  );\n};\n\nexport const useMessagesContext = () => {\n  return useContext(MessagesContext);\n};\n\nexport default MessagesProvider;\n"]},"metadata":{},"sourceType":"module"}