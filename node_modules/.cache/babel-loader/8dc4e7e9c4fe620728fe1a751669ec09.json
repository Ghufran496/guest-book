{"ast":null,"code":"export const isEmail = email => {\n  return String(email).toLowerCase().match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n};\nexport const isValidPassword = password => {\n  return password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/);\n};\nexport const isValidUsername = username => {\n  return username.match(/^(?=[a-zA-Z0-9._]{8,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/);\n};\nexport const validateUser = userData => {\n  const username = userData.username ? userData.username.trim() : null;\n  const email = userData.email ? userData.email.trim() : null;\n  const password = userData.password ? userData.password.trim() : null;\n  const validationErrors = [];\n\n  if (!username || !email || !password) {\n    validationErrors.push('Missing values');\n    return validationErrors;\n  }\n\n  if (!isValidUsername(username)) {\n    validationErrors.push('Please provide a valid username with minimum eight characters. Allowed characters: [ letters numbers . _  ]. No [ . _ ] at the beginning or at the end or followed by each other');\n  }\n\n  if (!isEmail(email)) {\n    validationErrors.push('Please provide a valid email address');\n  }\n\n  if (!isValidPassword(password)) {\n    validationErrors.push('Please provide a password with minimum eight characters, at least one uppercase letter, one lowercase letter and one number and one special character');\n  }\n\n  return validationErrors;\n};\nexport const protectedTrimString = value => value && typeof value === 'string' ? value.trim() : value;","map":{"version":3,"sources":["L:/Work/Projects/guest-book-client-main/guest-book-client-main/src/helpers/validation.js"],"names":["isEmail","email","String","toLowerCase","match","isValidPassword","password","isValidUsername","username","validateUser","userData","trim","validationErrors","push","protectedTrimString","value"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAIC,KAAD,IAAW;AAChC,SAAOC,MAAM,CAACD,KAAD,CAAN,CACJE,WADI,GAEJC,KAFI,CAGH,uJAHG,CAAP;AAKD,CANM;AAQP,OAAO,MAAMC,eAAe,GAAIC,QAAD,IAAc;AAC3C,SAAOA,QAAQ,CAACF,KAAT,CACL,sEADK,CAAP;AAGD,CAJM;AAKP,OAAO,MAAMG,eAAe,GAAIC,QAAD,IAAc;AAC3C,SAAOA,QAAQ,CAACJ,KAAT,CACL,qDADK,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMK,YAAY,GAAIC,QAAD,IAAc;AACxC,QAAMF,QAAQ,GAAGE,QAAQ,CAACF,QAAT,GAAoBE,QAAQ,CAACF,QAAT,CAAkBG,IAAlB,EAApB,GAA+C,IAAhE;AAEA,QAAMV,KAAK,GAAGS,QAAQ,CAACT,KAAT,GAAiBS,QAAQ,CAACT,KAAT,CAAeU,IAAf,EAAjB,GAAyC,IAAvD;AAEA,QAAML,QAAQ,GAAGI,QAAQ,CAACJ,QAAT,GAAoBI,QAAQ,CAACJ,QAAT,CAAkBK,IAAlB,EAApB,GAA+C,IAAhE;AAEA,QAAMC,gBAAgB,GAAG,EAAzB;;AAEA,MAAI,CAACJ,QAAD,IAAa,CAACP,KAAd,IAAuB,CAACK,QAA5B,EAAsC;AACpCM,IAAAA,gBAAgB,CAACC,IAAjB,CAAsB,gBAAtB;AACA,WAAOD,gBAAP;AACD;;AAED,MAAI,CAACL,eAAe,CAACC,QAAD,CAApB,EAAgC;AAC9BI,IAAAA,gBAAgB,CAACC,IAAjB,CACE,kLADF;AAGD;;AACD,MAAI,CAACb,OAAO,CAACC,KAAD,CAAZ,EAAqB;AACnBW,IAAAA,gBAAgB,CAACC,IAAjB,CAAsB,sCAAtB;AACD;;AACD,MAAI,CAACR,eAAe,CAACC,QAAD,CAApB,EAAgC;AAC9BM,IAAAA,gBAAgB,CAACC,IAAjB,CACE,uJADF;AAGD;;AACD,SAAOD,gBAAP;AACD,CA5BM;AA8BP,OAAO,MAAME,mBAAmB,GAAIC,KAAD,IACjCA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,GAAqCA,KAAK,CAACJ,IAAN,EAArC,GAAoDI,KAD/C","sourcesContent":["export const isEmail = (email) => {\n  return String(email)\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    );\n};\n\nexport const isValidPassword = (password) => {\n  return password.match(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n  );\n};\nexport const isValidUsername = (username) => {\n  return username.match(\n    /^(?=[a-zA-Z0-9._]{8,20}$)(?!.*[_.]{2})[^_.].*[^_.]$/,\n  );\n};\n\nexport const validateUser = (userData) => {\n  const username = userData.username ? userData.username.trim() : null;\n\n  const email = userData.email ? userData.email.trim() : null;\n\n  const password = userData.password ? userData.password.trim() : null;\n\n  const validationErrors = [];\n\n  if (!username || !email || !password) {\n    validationErrors.push('Missing values');\n    return validationErrors;\n  }\n\n  if (!isValidUsername(username)) {\n    validationErrors.push(\n      'Please provide a valid username with minimum eight characters. Allowed characters: [ letters numbers . _  ]. No [ . _ ] at the beginning or at the end or followed by each other',\n    );\n  }\n  if (!isEmail(email)) {\n    validationErrors.push('Please provide a valid email address');\n  }\n  if (!isValidPassword(password)) {\n    validationErrors.push(\n      'Please provide a password with minimum eight characters, at least one uppercase letter, one lowercase letter and one number and one special character',\n    );\n  }\n  return validationErrors;\n};\n\nexport const protectedTrimString = (value) =>\n  value && typeof value === 'string' ? value.trim() : value;\n"]},"metadata":{},"sourceType":"module"}