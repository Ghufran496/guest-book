{"ast":null,"code":"var _jsxFileName = \"L:\\\\Work\\\\Projects\\\\guest-book-client-main\\\\guest-book-client-main\\\\src\\\\components\\\\MessagesSection\\\\MessagesSection.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport guestBookApi from '../../api/guest-book';\nimport { useMessagesContext } from '../../context/auth/MessagesProvider';\nimport Message from '../Message/Message';\nimport styles from './MessagesSection.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessagesSection = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useMessagesContext();\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const {\n          messages,\n          errors\n        } = await guestBookApi.fetchMessages();\n\n        if (!errors) {\n          dispatch({\n            type: 'SET_MESSAGES',\n            payload: messages\n          });\n        }\n      } catch (error) {\n        console.log('error -------------- ', error);\n      }\n    };\n\n    fetchMessages();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.MessagesSection,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messagesContainer,\n      children: state && state.messages && state.messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n        messageInfo: message\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessagesSection, \"itCblGVS78NbJ+haAk/i6CHXmB4=\", false, function () {\n  return [useMessagesContext];\n});\n\n_c = MessagesSection;\nexport default MessagesSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessagesSection\");","map":{"version":3,"sources":["L:/Work/Projects/guest-book-client-main/guest-book-client-main/src/components/MessagesSection/MessagesSection.js"],"names":["useEffect","guestBookApi","useMessagesContext","Message","styles","MessagesSection","state","dispatch","fetchMessages","messages","errors","type","payload","error","console","log","messagesContainer","map","message","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,kBAAT,QAAmC,qCAAnC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBL,kBAAkB,EAA9C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,cAAM;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ,YAAuB,MAAMT,YAAY,CAACO,aAAb,EAAnC;;AAEA,YAAI,CAACE,MAAL,EAAa;AACXH,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,OAAO,EAAEH;AAAjC,WAAD,CAAR;AACD;AACF,OAND,CAME,OAAOI,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AACD;AACF,KAVD;;AAWAL,IAAAA,aAAa;AACd,GAbQ,EAaN,CAACD,QAAD,CAbM,CAAT;AAeA,sBACE;AAAS,IAAA,SAAS,EAAEH,MAAM,CAACC,eAA3B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAED,MAAM,CAACY,iBAAvB;AAAA,gBACGV,KAAK,IACJA,KAAK,CAACG,QADP,IAECH,KAAK,CAACG,QAAN,CAAeQ,GAAf,CAAoBC,OAAD,iBACjB,QAAC,OAAD;AAA0B,QAAA,WAAW,EAAEA;AAAvC,SAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7BD;;GAAMd,e;UACwBH,kB;;;KADxBG,e;AA+BN,eAAeA,eAAf","sourcesContent":["import { useEffect } from 'react';\nimport guestBookApi from '../../api/guest-book';\nimport { useMessagesContext } from '../../context/auth/MessagesProvider';\nimport Message from '../Message/Message';\nimport styles from './MessagesSection.module.css';\n\nconst MessagesSection = () => {\n  const { state, dispatch } = useMessagesContext();\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const { messages, errors } = await guestBookApi.fetchMessages();\n\n        if (!errors) {\n          dispatch({ type: 'SET_MESSAGES', payload: messages });\n        }\n      } catch (error) {\n        console.log('error -------------- ', error);\n      }\n    };\n    fetchMessages();\n  }, [dispatch]);\n\n  return (\n    <section className={styles.MessagesSection}>\n      <div className={styles.messagesContainer}>\n        {state &&\n          state.messages &&\n          state.messages.map((message) => (\n            <Message key={message.id} messageInfo={message} />\n          ))}\n      </div>\n    </section>\n  );\n};\n\nexport default MessagesSection;\n"]},"metadata":{},"sourceType":"module"}