{"ast":null,"code":"var _jsxFileName = \"L:\\\\Work\\\\Projects\\\\guest-book-client-main\\\\guest-book-client-main\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport styles from './Auth.module.css';\nimport guestBookApi from '../../api/guest-book';\nimport { useAuthContext } from '../../context/auth/AuthProvider';\nimport { validateUser } from \"../../helpers/validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const usernameRef = useRef();\n  const {\n    dispatch\n  } = useAuthContext();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [formErrors, setFormErrors] = useState([]);\n  const [registerMode, setRegisterMode] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const register = async (username, email, password) => {\n    try {\n      const {\n        errors\n      } = await guestBookApi.register(username, email, password);\n\n      if (errors) {\n        setFormErrors(prevState => [...prevState, ...errors]);\n      }\n    } catch (error) {\n      setFormErrors(prevState => [...prevState, 'Failed to register']);\n    }\n  };\n\n  const login = async (username, email, password) => {\n    try {\n      const {\n        userData,\n        errors\n      } = await guestBookApi.login(username, email, password);\n\n      if (errors) {\n        setFormErrors(prevState => [...prevState, ...errors]);\n      } else {\n        return userData;\n      }\n    } catch (error) {\n      setFormErrors(prevState => [...prevState, 'Failed to login']);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const username = usernameRef.current.value;\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const errors = validateUser({\n      username,\n      email,\n      password\n    });\n\n    if (errors.length > 0) {\n      setFormErrors(errors);\n      setLoading(false);\n      return;\n    } else {\n      setFormErrors([]);\n    }\n\n    if (registerMode) {\n      await register(username, email, password);\n      setLoading(false);\n    } else {\n      const userData = await login(username, email, password);\n      setLoading(false);\n\n      if (userData) {\n        dispatch({\n          type: 'SET_USER',\n          payload: userData\n        });\n\n        try {\n          localStorage.setItem('userData', JSON.stringify(userData));\n        } catch (error) {\n          alert('local storage is not supported on iphone');\n        }\n      }\n    }\n  };\n\n  const renderFormErrors = () => {\n    return formErrors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formErrors,\n      children: formErrors.map((e, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"* \", e]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this);\n  };\n\n  const renderOperationsStatus = () => loading && /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 51\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.title,\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        className: styles.subtitle,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"to leave a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [renderOperationsStatus(), renderFormErrors(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          id: \"username\",\n          className: styles.formInput,\n          ref: usernameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          id: \"email\",\n          className: styles.formInput,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          id: \"password\",\n          className: styles.formInput,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.btn,\n          type: \"submit\",\n          children: registerMode ? 'Register' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.switchBtn,\n          type: \"button\",\n          onClick: () => setRegisterMode(prevState => !prevState),\n          children: [\"Switch to \", registerMode ? 'Login' : 'Register']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"LCo/8n4p3wWdNukFQP5JknKclA0=\", false, function () {\n  return [useAuthContext];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["L:/Work/Projects/guest-book-client-main/guest-book-client-main/src/components/Auth/Auth.js"],"names":["useRef","useState","styles","guestBookApi","useAuthContext","validateUser","Auth","usernameRef","dispatch","emailRef","passwordRef","formErrors","setFormErrors","registerMode","setRegisterMode","loading","setLoading","register","username","email","password","errors","prevState","error","login","userData","handleSubmit","e","preventDefault","current","value","length","type","payload","localStorage","setItem","JSON","stringify","alert","renderFormErrors","map","index","renderOperationsStatus","auth","title","subtitle","form","formGroup","formInput","btnGroup","btn","switchBtn"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport styles from './Auth.module.css';\n\nimport guestBookApi from '../../api/guest-book';\nimport { useAuthContext } from '../../context/auth/AuthProvider';\nimport {validateUser} from \"../../helpers/validation\";\n\nconst Auth = () => {\n  const usernameRef = useRef();\n  const { dispatch } = useAuthContext();\n  const emailRef = useRef();\n\n  const passwordRef = useRef();\n\n  const [formErrors, setFormErrors] = useState([]);\n\n  const [registerMode, setRegisterMode] = useState(true);\n\n  const [loading, setLoading] = useState(false);\n\n  const register = async (username, email, password) => {\n    try {\n      const { errors } = await guestBookApi.register(username, email, password);\n      if (errors) {\n        setFormErrors((prevState) => [...prevState, ...errors]);\n      }\n    } catch (error) {\n      setFormErrors((prevState) => [...prevState, 'Failed to register']);\n    }\n  };\n\n  const login = async (username, email, password) => {\n    try {\n      const { userData, errors } = await guestBookApi.login(\n        username,\n        email,\n        password,\n      );\n\n      if (errors) {\n        setFormErrors((prevState) => [...prevState, ...errors]);\n      } else {\n        return userData;\n      }\n    } catch (error) {\n      setFormErrors((prevState) => [...prevState, 'Failed to login']);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const username = usernameRef.current.value;\n\n    const email = emailRef.current.value;\n\n    const password = passwordRef.current.value;\n\n    const errors = validateUser({ username, email, password });\n\n    if (errors.length > 0) {\n      setFormErrors(errors);\n      setLoading(false);\n      return;\n    } else {\n      setFormErrors([]);\n    }\n\n    if (registerMode) {\n      await register(username, email, password);\n      setLoading(false);\n    } else {\n      const userData = await login(username, email, password);\n      setLoading(false);\n      if (userData) {\n        dispatch({ type: 'SET_USER', payload: userData });\n        try {\n          localStorage.setItem('userData', JSON.stringify(userData));\n        } catch (error) {\n          alert('local storage is not supported on iphone');\n        }\n      }\n    }\n  };\n\n  const renderFormErrors = () => {\n    return (\n      formErrors.length > 0 && (\n        <div className={styles.formErrors}>\n          {formErrors.map((e, index) => (\n            <span key={index}>* {e}</span>\n          ))}\n        </div>\n      )\n    );\n  };\n\n  const renderOperationsStatus = () => loading && <p>loading</p>;\n\n  return (\n    <div className={styles.auth}>\n      <h2 className={styles.title}>\n        <b className={styles.subtitle}>Register</b>{' '}\n        <span>to leave a message</span>\n      </h2>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        {renderOperationsStatus()}\n        {renderFormErrors()}\n        <div className={styles.formGroup}>\n          <label htmlFor='username'>Username</label>\n          <input\n            type='text'\n            placeholder='Username'\n            id='username'\n            className={styles.formInput}\n            ref={usernameRef}\n          />\n        </div>\n        <div className={styles.formGroup}>\n          <label htmlFor='email'>Email address</label>\n          <input\n            type='email'\n            placeholder='Email Address'\n            id='email'\n            className={styles.formInput}\n            ref={emailRef}\n          />\n        </div>\n        <div className={styles.formGroup}>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            placeholder='Password'\n            id='password'\n            className={styles.formInput}\n            ref={passwordRef}\n          />\n        </div>\n        <div className={styles.btnGroup}>\n          <button className={styles.btn} type='submit'>\n            {registerMode ? 'Register' : 'Login'}\n          </button>\n          <button\n            className={styles.switchBtn}\n            type='button'\n            onClick={() => setRegisterMode((prevState) => !prevState)}\n          >\n            Switch to {registerMode ? 'Login' : 'Register'}\n          </button>\n        </div>\n        <div className={styles.formGroup}></div>\n      </form>\n    </div>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}