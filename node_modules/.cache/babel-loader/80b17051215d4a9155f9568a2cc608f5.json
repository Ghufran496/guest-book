{"ast":null,"code":"var _jsxFileName = \"L:\\\\Work\\\\Projects\\\\guest-book-client-main\\\\guest-book-client-main\\\\src\\\\components\\\\AddMessageSection\\\\AddMessageSection.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport guestBookApi from '../../api/guest-book';\nimport { useAuthContext } from '../../context/auth/AuthProvider';\nimport { useMessagesContext } from '../../context/auth/MessagesProvider';\nimport { protectedTrimString } from '../../helpers/validation';\nimport styles from './AddMessageSection.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddMessageSection = () => {\n  _s();\n\n  const messageRef = useRef();\n  const {\n    state,\n    dispatch\n  } = useAuthContext();\n  const {\n    dispatch: messagesDispatch\n  } = useMessagesContext();\n\n  const createMessage = async (username, content) => {\n    try {\n      const {\n        newMessageId,\n        errors\n      } = await guestBookApi.createMessage(username, content);\n      return {\n        newMessageId,\n        errors\n      };\n    } catch (error) {\n      console.log('error -------------- ', error);\n    }\n  };\n\n  const fetchMessages = async () => {\n    try {\n      const {\n        messages,\n        errors\n      } = await guestBookApi.fetchMessages();\n\n      if (!errors) {\n        messagesDispatch({\n          type: 'SET_MESSAGES',\n          payload: messages\n        });\n      }\n\n      console.log(messages, errors);\n    } catch (error) {\n      console.log('error -------------- ', error);\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = messageRef.current.value;\n\n    if (!protectedTrimString(message)) {\n      return;\n    }\n\n    const userData = state.userData;\n\n    if (!userData) {\n      return;\n    }\n\n    const {\n      errors\n    } = await createMessage(state.userData.username, message);\n    messageRef.current.value = '';\n    await fetchMessages();\n\n    if (!errors) {\n      dispatch({\n        type: 'SET_MESSAGES',\n        payload: []\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.AddMessageSection,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Add Message\",\n          id: \"text\",\n          className: styles.formInput,\n          ref: messageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.btnWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.btn,\n          children: \"Add Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddMessageSection, \"V1J9933Fx+kXyXEkD074uh1Cdm8=\", false, function () {\n  return [useAuthContext, useMessagesContext];\n});\n\n_c = AddMessageSection;\nexport default AddMessageSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMessageSection\");","map":{"version":3,"sources":["L:/Work/Projects/guest-book-client-main/guest-book-client-main/src/components/AddMessageSection/AddMessageSection.js"],"names":["useRef","guestBookApi","useAuthContext","useMessagesContext","protectedTrimString","styles","AddMessageSection","messageRef","state","dispatch","messagesDispatch","createMessage","username","content","newMessageId","errors","error","console","log","fetchMessages","messages","type","payload","handleSubmit","e","preventDefault","message","current","value","userData","form","formGroup","formInput","btnWrapper","btn"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\nimport guestBookApi from '../../api/guest-book';\nimport { useAuthContext } from '../../context/auth/AuthProvider';\nimport { useMessagesContext } from '../../context/auth/MessagesProvider';\nimport { protectedTrimString } from '../../helpers/validation';\nimport styles from './AddMessageSection.module.css';\n\nconst AddMessageSection = () => {\n  const messageRef = useRef();\n\n  const { state, dispatch } = useAuthContext();\n  const { dispatch: messagesDispatch } = useMessagesContext();\n\n  const createMessage = async (username, content) => {\n    try {\n      const { newMessageId, errors } = await guestBookApi.createMessage(\n        username,\n        content,\n      );\n      return { newMessageId, errors };\n    } catch (error) {\n      console.log('error -------------- ', error);\n    }\n  };\n  const fetchMessages = async () => {\n    try {\n      const { messages, errors } = await guestBookApi.fetchMessages();\n\n      if (!errors) {\n        messagesDispatch({ type: 'SET_MESSAGES', payload: messages });\n      }\n\n      console.log(messages, errors);\n    } catch (error) {\n      console.log('error -------------- ', error);\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const message = messageRef.current.value;\n\n    if (!protectedTrimString(message)) {\n      return;\n    }\n\n    const userData = state.userData;\n\n    if (!userData) {\n      return;\n    }\n\n    const { errors } = await createMessage(state.userData.username, message);\n    messageRef.current.value = '';\n    await fetchMessages();\n    if (!errors) {\n      dispatch({ type: 'SET_MESSAGES', payload: [] });\n    }\n  };\n\n  return (\n    <section className={styles.AddMessageSection}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <div className={styles.formGroup}>\n          <label htmlFor='text'>Message</label>\n          <textarea\n            placeholder='Add Message'\n            id='text'\n            className={styles.formInput}\n            ref={messageRef}\n          ></textarea>\n        </div>\n        <div className={styles.btnWrapper}>\n          <button className={styles.btn}>Add Message</button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AddMessageSection;\n"]},"metadata":{},"sourceType":"module"}